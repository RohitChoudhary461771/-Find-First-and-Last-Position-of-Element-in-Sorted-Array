Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]



class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans(2,-1);
        int n=nums.size();
        bool flag=false;
        int maxi=INT_MIN;
        int mini=INT_MAX;
        int s=0 ,e=n-1;
        int mid=s+(e-s)/2;
        while(s<=e){
            if(nums[mid]==target){
                mini=mid;
                flag=true;
                e=mid-1;
            }
            if(nums[mid]<target){
                s=mid+1;
            }
           else if(nums[mid]>target){
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
      if(flag) { 
         s=mini;
         e=n-1;
        mid=s+(e-s)/2;
        while(s<=e){
            if(nums[mid]==target){
                maxi=mid;
                s=mid+1;
            }
            if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
      cout<<mid<<" ";
    
        ans[0]=mini;
        ans[1]=maxi;
    }
    return ans;
    }
};
